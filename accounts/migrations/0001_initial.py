# Generated by Django 4.2.21 on 2025-07-23 14:35

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Student", "Student"),
                            ("Teacher", "Teacher"),
                            ("Parent", "Parent"),
                            ("Admin", "Admin"),
                        ],
                        default="Student",
                        max_length=10,
                    ),
                ),
                (
                    "is_school_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Designates if this admin user manages a specific school.",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user has verified their email address.",
                    ),
                ),
                (
                    "verification_token",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ParentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/parents/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParentStudentLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecentActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("Lesson", "Lesson"),
                            ("Quiz", "Quiz"),
                            ("Reward", "Reward"),
                            ("Login", "Login"),
                            ("Logout", "Logout"),
                        ],
                        max_length=50,
                    ),
                ),
                ("details", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "school_id_code",
                    models.CharField(
                        help_text="Unique external ID for the school",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "license_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("official_email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "principal_full_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "principal_contact_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "principal_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SchoolClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "School Classes",
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "preferred_language",
                    models.CharField(
                        blank=True, default="en", max_length=10, null=True
                    ),
                ),
                (
                    "father_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mother_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "place_of_birth",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("blood_group", models.CharField(blank=True, max_length=10, null=True)),
                ("needs_assistant_teacher", models.BooleanField(default=False)),
                (
                    "admission_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "parent_email_for_linking",
                    models.EmailField(
                        blank=True,
                        help_text="Parent's email to verify and link account.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "parent_mobile_for_linking",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "parent_occupation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hobbies", models.TextField(blank=True, null=True)),
                (
                    "favorite_sports",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("interested_in_gardening_farming", models.BooleanField(default=False)),
                ("nickname", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/students/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_data",
                    models.JSONField(
                        help_text="The full JSON output from the PersonalizedLearningSuggestions AI flow."
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Syllabus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TeacherProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("interested_in_tuition", models.BooleanField(default=False)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/teachers/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserDailyActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "study_duration_minutes",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total study duration for this day in minutes.",
                    ),
                ),
                (
                    "present",
                    models.BooleanField(
                        default=False, help_text="Attendance for the day."
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="UserLoginActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "activity_type",
                    models.CharField(
                        choices=[("login", "Login"), ("logout", "Logout")],
                        max_length=10,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserSubjectStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("duration_minutes", models.PositiveIntegerField(default=0)),
                (
                    "daily_activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subject_studies",
                        to="accounts.userdailyactivity",
                    ),
                ),
            ],
            options={
                "ordering": ["-duration_minutes"],
            },
        ),
    ]

# Generated by Django 4.2.21 on 2025-07-23 14:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("content", "0001_initial"),
        ("accounts", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.AddField(
            model_name="usersubjectstudy",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="study_sessions",
                to="content.subject",
            ),
        ),
        migrations.AddField(
            model_name="userloginactivity",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="login_activities",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userdailyactivity",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="daily_activities",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="teacherprofile",
            name="assigned_classes",
            field=models.ManyToManyField(
                blank=True, related_name="teachers_assigned", to="accounts.schoolclass"
            ),
        ),
        migrations.AddField(
            model_name="teacherprofile",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="teachers",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="teacherprofile",
            name="subject_expertise",
            field=models.ManyToManyField(
                blank=True, related_name="expert_teachers", to="content.subject"
            ),
        ),
        migrations.AddField(
            model_name="teacherprofile",
            name="user",
            field=models.OneToOneField(
                limit_choices_to={"role": "Teacher"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teacher_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="studentrecommendation",
            name="student",
            field=models.ForeignKey(
                limit_choices_to={"role": "Student"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recommendations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="studentprofile",
            name="enrolled_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="enrolled_students",
                to="accounts.schoolclass",
            ),
        ),
        migrations.AddField(
            model_name="studentprofile",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="students",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="studentprofile",
            name="user",
            field=models.OneToOneField(
                limit_choices_to={"role": "Student"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="student_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="schoolclass",
            name="master_class",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="content.class"
            ),
        ),
        migrations.AddField(
            model_name="schoolclass",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="accounts.school"
            ),
        ),
        migrations.AddField(
            model_name="school",
            name="admin_user",
            field=models.OneToOneField(
                blank=True,
                help_text="The primary admin user for this school, created during registration.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="administered_school",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="school",
            name="master_classes",
            field=models.ManyToManyField(
                related_name="schools_offering",
                through="accounts.SchoolClass",
                to="content.class",
            ),
        ),
        migrations.AddField(
            model_name="school",
            name="syllabus",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="schools",
                to="accounts.syllabus",
            ),
        ),
        migrations.AddField(
            model_name="recentactivity",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recent_activities",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="parentstudentlink",
            name="parent",
            field=models.ForeignKey(
                limit_choices_to={"role": "Parent"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parent_links",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="parentstudentlink",
            name="student",
            field=models.ForeignKey(
                limit_choices_to={"role": "Student"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="student_links",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="parentprofile",
            name="user",
            field=models.OneToOneField(
                limit_choices_to={"role": "Parent"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parent_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="staff_and_students",
                to="accounts.school",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="usersubjectstudy",
            unique_together={("daily_activity", "subject")},
        ),
        migrations.AlterUniqueTogether(
            name="userdailyactivity",
            unique_together={("user", "date")},
        ),
        migrations.AlterUniqueTogether(
            name="schoolclass",
            unique_together={("school", "master_class")},
        ),
        migrations.AlterUniqueTogether(
            name="parentstudentlink",
            unique_together={("parent", "student")},
        ),
    ]
